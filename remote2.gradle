

rootProject.buildscript {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath 'com.hujiang.aspectjx:gradle-android-plugin-aspectjx:2.0.10'
    }
}


def isRelease(){
    for (String s : gradle.startParameter.taskNames) {
        if (s.contains("ultiChannel") | s.contains("elease")) {
            return true
        }
    }
    return false
}

def hasApplyAspectjx(Project project0){
    return project0.plugins.findPlugin("com.hujiang.android-aspectjx") != null || project0.plugins.findPlugin("android-aspectjx") != null
}

def isLocal(){

    for(Project p : subprojects){
        if( p.getName().contains("flipper")){
            return true;
        }
    }
    return false;
}

def doUseAspectjx(){
    if( gradle.hasProperty("flipper_use_aspectjx")){
        println("has prop:flipper_use_aspectjx:"+gradle.getProperties().get("flipper_use_aspectjx"))
        return gradle.getProperties().get("flipper_use_aspectjx").toBoolean();
    }
    return false;
}
def flipper
def flippernoop
if(isLocal()){
    flipper = project(':flipper')
    flippernoop = project(':flipper-no-op')

}else {
    flipper = 'com.github.hss01248.flipperUtil:flipper:1.0.9'
    flippernoop = 'com.github.hss01248.flipperUtil:flipper-no-op:1.0.9'
}




gradle.addProjectEvaluationListener(new ProjectEvaluationListener() {
    @Override
    void beforeEvaluate(Project project) {
        println("---->beforeEvaluate:"+project)
        //println("---->beforeEvaluate:"+project.plugins)
        /*if(project.name.contains("app") || project.name.contains("demo")
                || project.name.contains("Demo") || project.name.contains("sample")
                || project.name.contains("Sample")){
        }*/

    }

    @Override
    void afterEvaluate(Project project, ProjectState projectState) {
        println("---->afterEvaluate:"+project)
        if(project.plugins.findPlugin("com.android.application") != null){
            project.repositories {
                maven { url 'https://jitpack.io' }
                mavenCentral()
                google()
                jcenter()
            }
            if(!isRelease()){
                project.dependencies {
                    implementation flipper
                }
            }else {
                project.dependencies {
                    implementation flippernoop
                }
            }

            //UnsatisfiedLinkError: couldn't find DSO to load: libfbjni.so
            //todo 判断: 如果(RN)工程本来有依赖 group: 'com.facebook.fbjni', module: 'fbjni-java-only',那么就排除module: 'fbjni'
            //all*.exclude group: 'com.facebook.fbjni', module: 'fbjni'
            //all*.exclude group: 'com.facebook.fbjni', module: 'fbjni-java-only'

            println("---->isLocal():"+isLocal())


            //&& doUseAspectjx()

            if (!isRelease() && !hasApplyAspectjx(project) ){
                println("apply plugin: 'com.hujiang.android-aspectjx' by hss01248/flipperUtil, add flipper networkinterceptor to okhttpclient automatically")
                project.apply plugin: 'com.hujiang.android-aspectjx'
//为加快编译速度,需要自己将扫描的包路径添加到include里.  性能差距: 4min vs 4s
                project.aspectjx {
//排除所有package路径中包含`android.support`的class文件及库（jar文件）:Invalid byte tag in constant pool
                    exclude 'com.google', 'com.taobao', 'com.alibaba', 'module-info', 'com.squareup.haha', 'versions.9', 'com.tencent',
                            'androidx',
                            //'com.squareup',
                            'com.alipay',
                            'org.apache',
                            'com.alipay',
                            'cn.jiguang',
                            //'com.github',
                            'com.meizu',
                            'com.huawei',
                            'com.qiyukf',
                            'com.sina',
                            'io.reactivex',
                            'de.greenrobot.event',
                            'com.netease.neliveplayer',
                            'com.umeng',
                            'im.yixin',
                            'com.commonsware',
                            'io.fabric',
                            'rx.android',
                            'com.android'
                    //不使用include时,项目一大就很慢,分钟级别,所以提供开关

                }
            }else {
                println("not apply aspectjx ,not add flipper networkinterceptor to okhttpclient automatically," +
                        "because isRelease or hasApplyAspectjx before or flipper_use_aspectjx is not true : " +
                        "isRelease:"+isRelease()+",hasApplyAspectjx:"+hasApplyAspectjx(project)+",flipper_use_aspectjx:"+doUseAspectjx())
            }

        }

    }
})

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
}

/*def mybeApp(name){
    return name != null && ( name.contains("app") || name.contains("demo")
            || name.contains("Demo") || name.contains("ample") )
}

rootProject.subprojects {
    println(project.plugins.findPlugin("com.android.application")+"---->"+project.displayName)
    if(mybeApp(project.displayName)){
        project.dependencies {
            if(!isRelease()){
                project.dependencies {
                    implementation flipper
                }
            }else {
                project.dependencies {
                    implementation flippernoop
                }
            }
        }
    }
}*/

